# This does not replace the .zshrc, since it doesn't contain any computer specific settings. Instead, import this from your .zshrc as follows:
#
# source $GIT/dotfiles/dot_zshrc
# 

export VISUAL='vim'
export EDITOR='vim'

# Shortcuts
alias open=gnome-open
alias grepr='grep --color -r'
alias ls='ls --color=auto'
alias d='tmux a'
#alias d='screen -r dev'
alias mpiexec='mpiexec.mpich2'
alias mpirun='mpirun.mpich2'
alias mpython='mpirun -np 8 python'

# Set up the prompt

autoload -Uz promptinit
promptinit

setopt histignorealldups sharehistory

# Use emacs keybindings even if our EDITOR is set to vi
bindkey -e

# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history

# Use modern completion system
autoload -Uz compinit
compinit

autoload zmv

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

autoload -U colors && colors

# This prompt will show if any background processes exist. It will also display
# virtualenvs.
precmd() {
    PS1="%{$fg[green]%}[%.@%m]%{$reset_color%}"
    if [ -n "$VIRTUAL_ENV" ]; then
        PS1="%{$fg[yellow]%}(`basename $VIRTUAL_ENV`)%{$reset_color%}${PS1}"
    fi

    if [ $#jobstates -ne 0 ]; then
        PS1="${PS1}(%{$fg[red]%}$#jobstates%{$reset_color%})"
    fi
    PS1="${PS1}$ "
}
